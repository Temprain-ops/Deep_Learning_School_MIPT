{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"seminar-audio-29-12\"","provenance":[{"file_id":"1yvCAPJquyDWQBjNPC8Vv96aITUBLI15I","timestamp":1608469614348}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"b_2Uzvp6x9OO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1608472221487,"user_tz":-180,"elapsed":6523,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"06c1c1b5-c1cb-4096-e47e-d19570d85830"},"source":["!pip3 install timit-utils==0.9.0"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting timit-utils==0.9.0\n","  Downloading https://files.pythonhosted.org/packages/22/32/0c98f7f44386947b9e4080f54f09a7380c390e0b8337ab0b87050d49c43a/timit_utils-0.9.0-py3-none-any.whl\n","Collecting SoundFile>=0.8.0\n","  Downloading https://files.pythonhosted.org/packages/eb/f2/3cbbbf3b96fb9fa91582c438b574cff3f45b29c772f94c400e2c99ef5db9/SoundFile-0.10.3.post1-py2.py3-none-any.whl\n","Collecting python-speech-features\n","  Downloading https://files.pythonhosted.org/packages/ff/d1/94c59e20a2631985fbd2124c45177abaa9e0a4eee8ba8a305aa26fc02a8e/python_speech_features-0.6.tar.gz\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from timit-utils==0.9.0) (1.19.4)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from timit-utils==0.9.0) (3.2.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from timit-utils==0.9.0) (1.4.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from timit-utils==0.9.0) (1.1.5)\n","Requirement already satisfied: cffi>=1.0 in /usr/local/lib/python3.6/dist-packages (from SoundFile>=0.8.0->timit-utils==0.9.0) (1.14.4)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->timit-utils==0.9.0) (1.3.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->timit-utils==0.9.0) (2.8.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->timit-utils==0.9.0) (0.10.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->timit-utils==0.9.0) (2.4.7)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas->timit-utils==0.9.0) (2018.9)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.6/dist-packages (from cffi>=1.0->SoundFile>=0.8.0->timit-utils==0.9.0) (2.20)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.1->matplotlib->timit-utils==0.9.0) (1.15.0)\n","Building wheels for collected packages: python-speech-features\n","  Building wheel for python-speech-features (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for python-speech-features: filename=python_speech_features-0.6-cp36-none-any.whl size=5890 sha256=64d0bff345b495614293345a6da46ccb5da9cb496701e938859c2c871f64fa3a\n","  Stored in directory: /root/.cache/pip/wheels/3c/42/7c/f60e9d1b40015cd69b213ad90f7c18a9264cd745b9888134be\n","Successfully built python-speech-features\n","Installing collected packages: SoundFile, python-speech-features, timit-utils\n","Successfully installed SoundFile-0.10.3.post1 python-speech-features-0.6 timit-utils-0.9.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A_i1DawINuqD","executionInfo":{"status":"ok","timestamp":1608472317899,"user_tz":-180,"elapsed":102926,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"80c87011-ac16-47b9-f753-b98107bba33b"},"source":["!pip3 install torchaudio"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Collecting torchaudio\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/2a/f9/618434cf4e46dc975871e1516f5499abef6564ab4366f9b2321ee536be14/torchaudio-0.7.2-cp36-cp36m-manylinux1_x86_64.whl (7.6MB)\n","\u001b[K     |████████████████████████████████| 7.6MB 4.5MB/s \n","\u001b[?25hCollecting torch==1.7.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/90/4f/acf48b3a18a8f9223c6616647f0a011a5713a985336088d7c76f3a211374/torch-1.7.1-cp36-cp36m-manylinux1_x86_64.whl (776.8MB)\n","\u001b[K     |████████████████████████████████| 776.8MB 21kB/s \n","\u001b[?25hRequirement already satisfied: dataclasses; python_version < \"3.7\" in /usr/local/lib/python3.6/dist-packages (from torch==1.7.1->torchaudio) (0.8)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.6/dist-packages (from torch==1.7.1->torchaudio) (3.7.4.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from torch==1.7.1->torchaudio) (1.19.4)\n","\u001b[31mERROR: torchvision 0.8.1+cu101 has requirement torch==1.7.0, but you'll have torch 1.7.1 which is incompatible.\u001b[0m\n","Installing collected packages: torch, torchaudio\n","  Found existing installation: torch 1.7.0+cu101\n","    Uninstalling torch-1.7.0+cu101:\n","      Successfully uninstalled torch-1.7.0+cu101\n","Successfully installed torch-1.7.1 torchaudio-0.7.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ULdDGT_dyi8R","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1608472334742,"user_tz":-180,"elapsed":119762,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"93208f2c-09ef-4033-8874-d234b8419712"},"source":["! wget https://ndownloader.figshare.com/files/10256148 "],"execution_count":3,"outputs":[{"output_type":"stream","text":["--2020-12-20 13:51:57--  https://ndownloader.figshare.com/files/10256148\n","Resolving ndownloader.figshare.com (ndownloader.figshare.com)... 52.215.105.185, 18.202.203.7, 52.16.75.60, ...\n","Connecting to ndownloader.figshare.com (ndownloader.figshare.com)|52.215.105.185|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/10256148/TIMIT.zip [following]\n","--2020-12-20 13:51:57--  https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/10256148/TIMIT.zip\n","Resolving s3-eu-west-1.amazonaws.com (s3-eu-west-1.amazonaws.com)... 52.218.105.234\n","Connecting to s3-eu-west-1.amazonaws.com (s3-eu-west-1.amazonaws.com)|52.218.105.234|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 440207227 (420M) [binary/octet-stream]\n","Saving to: ‘10256148’\n","\n","10256148            100%[===================>] 419.81M  28.6MB/s    in 16s     \n","\n","2020-12-20 13:52:14 (26.8 MB/s) - ‘10256148’ saved [440207227/440207227]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"G-z7_Ygqy7lJ","executionInfo":{"status":"ok","timestamp":1608472345099,"user_tz":-180,"elapsed":130113,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["!unzip -q 10256148"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"InJDrEPHLCRG","executionInfo":{"status":"ok","timestamp":1608472347976,"user_tz":-180,"elapsed":132986,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["import timit_utils as tu\n","import os\n","import librosa\n","import numpy as np\n","from tqdm import tqdm\n","\n","import torch\n","import torch.nn as nn\n","from torch.optim import Adam\n","import torch.nn.functional as F\n","\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import accuracy_score\n","\n","import IPython\n","_TIMIT_PATH = 'data/lisa/data/timit/raw/TIMIT'"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"jhQT9fBQL7xb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1608472348520,"user_tz":-180,"elapsed":133524,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"d785b907-343a-4106-a2e8-763938f2e4bc"},"source":["! wget https://audio-previews.elements.envatousercontent.com/files/6319559/preview.mp3 -O sample_f.mp3\n","! wget https://audio-previews.elements.envatousercontent.com/files/256324900/preview.mp3 -O sample_m.mp3"],"execution_count":6,"outputs":[{"output_type":"stream","text":["--2020-12-20 13:52:27--  https://audio-previews.elements.envatousercontent.com/files/6319559/preview.mp3\n","Resolving audio-previews.elements.envatousercontent.com (audio-previews.elements.envatousercontent.com)... 13.249.130.6, 13.249.130.123, 13.249.130.17, ...\n","Connecting to audio-previews.elements.envatousercontent.com (audio-previews.elements.envatousercontent.com)|13.249.130.6|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 28202 (28K) [audio/mpeg]\n","Saving to: ‘sample_f.mp3’\n","\n","\rsample_f.mp3          0%[                    ]       0  --.-KB/s               \rsample_f.mp3        100%[===================>]  27.54K  --.-KB/s    in 0.002s  \n","\n","2020-12-20 13:52:27 (13.2 MB/s) - ‘sample_f.mp3’ saved [28202/28202]\n","\n","--2020-12-20 13:52:27--  https://audio-previews.elements.envatousercontent.com/files/256324900/preview.mp3\n","Resolving audio-previews.elements.envatousercontent.com (audio-previews.elements.envatousercontent.com)... 13.249.130.6, 13.249.130.123, 13.249.130.17, ...\n","Connecting to audio-previews.elements.envatousercontent.com (audio-previews.elements.envatousercontent.com)|13.249.130.6|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 68884 (67K) [audio/mpeg]\n","Saving to: ‘sample_m.mp3’\n","\n","sample_m.mp3        100%[===================>]  67.27K  --.-KB/s    in 0.01s   \n","\n","2020-12-20 13:52:27 (4.98 MB/s) - ‘sample_m.mp3’ saved [68884/68884]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1sWQZSgp967_","executionInfo":{"status":"ok","timestamp":1608472349455,"user_tz":-180,"elapsed":134452,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"4333e3a7-ab9c-4196-8b2b-e5a85e8adf1d"},"source":["!ffmpeg -i sample_f.mp3 -ar 16000 -ac 1 tmp.wav"],"execution_count":7,"outputs":[{"output_type":"stream","text":["ffmpeg version 3.4.8-0ubuntu0.2 Copyright (c) 2000-2020 the FFmpeg developers\n","  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n","  configuration: --prefix=/usr --extra-version=0ubuntu0.2 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n","  libavutil      55. 78.100 / 55. 78.100\n","  libavcodec     57.107.100 / 57.107.100\n","  libavformat    57. 83.100 / 57. 83.100\n","  libavdevice    57. 10.100 / 57. 10.100\n","  libavfilter     6.107.100 /  6.107.100\n","  libavresample   3.  7.  0 /  3.  7.  0\n","  libswscale      4.  8.100 /  4.  8.100\n","  libswresample   2.  9.100 /  2.  9.100\n","  libpostproc    54.  7.100 / 54.  7.100\n","Input #0, mp3, from 'sample_f.mp3':\n","  Metadata:\n","    album           : http://audiojungle.net/user/urbazon/portfolio\n","    artist          : http://audiojungle.net/user/urbazon\n","  Duration: 00:00:01.59, start: 0.025057, bitrate: 141 kb/s\n","    Stream #0:0: Audio: mp3, 44100 Hz, stereo, s16p, 128 kb/s\n","    Metadata:\n","      encoder         : LAME3.98r\n","Stream mapping:\n","  Stream #0:0 -> #0:0 (mp3 (native) -> pcm_s16le (native))\n","Press [q] to stop, [?] for help\n","Output #0, wav, to 'tmp.wav':\n","  Metadata:\n","    IPRD            : http://audiojungle.net/user/urbazon/portfolio\n","    IART            : http://audiojungle.net/user/urbazon\n","    ISFT            : Lavf57.83.100\n","    Stream #0:0: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 16000 Hz, mono, s16, 256 kb/s\n","    Metadata:\n","      encoder         : Lavc57.107.100 pcm_s16le\n","size=      48kB time=00:00:01.54 bitrate= 256.9kbits/s speed= 107x    \n","video:0kB audio:48kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.356059%\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"IguM0n2u-j-R","executionInfo":{"status":"error","timestamp":1608472349701,"user_tz":-180,"elapsed":134690,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"ef20e0b1-be9d-4862-d234-b2d9cf3752dd"},"source":["#IPython.display.Audio(amplitudes, rate = sample_rate)"],"execution_count":8,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-94f8c764bd3a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mIPython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdisplay\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mAudio\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mamplitudes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrate\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msample_rate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'amplitudes' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"GKfsYcC4KziL"},"source":["### **Часть 1**\n","Напоминание: файл *.wav -- набор амплитуд, отсчитываемых за определенные промежутки времени. Sample rate (sr) -- число отсчитываемых амплитуд в секунду, параметр качества записи. Построим график амплитуд:"]},{"cell_type":"code","metadata":{"id":"P3t2I__7_myX","executionInfo":{"status":"ok","timestamp":1608472369057,"user_tz":-180,"elapsed":563,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["import soundfile as sf"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"kP1BJ8BV_qur","executionInfo":{"status":"ok","timestamp":1608472369390,"user_tz":-180,"elapsed":387,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["_sr, _data = sf.read('tmp.wav')"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"h2lw6RXo_ztu","executionInfo":{"status":"ok","timestamp":1608472369632,"user_tz":-180,"elapsed":579,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":[""],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":298},"id":"iDd4iAvrK6r0","executionInfo":{"status":"ok","timestamp":1608472371429,"user_tz":-180,"elapsed":2336,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"482cc5ef-a326-4d89-d002-b2c926084135"},"source":["amplitudes, sample_rate = librosa.load('tmp.wav')\n","print(f\"{len(amplitudes)} points, {len(amplitudes) / sample_rate} sec, sr {sample_rate}\")\n","plt.figure(figsize=[15, 4])\n","plt.title('')\n","plt.plot(amplitudes[20000:25000],linewidth=1.5)"],"execution_count":11,"outputs":[{"output_type":"stream","text":["34061 points, 1.5447165532879819 sec, sr 22050\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f9ae0804940>]"]},"metadata":{"tags":[]},"execution_count":11},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"8SXQNYJ6Lb9h"},"source":["В двух секундах 60000 точек! Работать неудобно, надо конвертировать в формат, с которым умеем работать (в изображение). Используем **быстрое преобразование Фурье** чтобы понять, какие же именно компоненты преобладают в некоторый момент времени. Подробнее: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n","\n","\n","<img src=\"https://upload.wikimedia.org/wikipedia/commons/c/c5/Spectrogram-19thC.png\" width=\"640px\">\n","\n","\n","Не забудем, что перед преобразование Фурье мы используем к фреймам по отдельности и потом склеиваем все в единую картину. Также следует помнить, что если использовать просто спектрограмму без перехода в мел-пространство, то мы можем сломать нашу будущую сетку слишком большими значениями. Подробнее: https://en.wikipedia.org/wiki/Mel-frequency_cepstrum\n","\n","\n","<img src=\"https://labrosa.ee.columbia.edu/doc/HTKBook21/img165.gif\" width=\"640px\">\n","\n","**Алгоритм построения мел-спектрограммы по набору частот:**\n","1. Разделяем вход на пересекающиеся фреймы\n","2. Применяем к каждому преобразование Фурье\n","3. Переводим полученную спектрограмму в мел-пространство"]},{"cell_type":"code","metadata":{"id":"q43r2X0NMRhW","executionInfo":{"status":"ok","timestamp":1608472371430,"user_tz":-180,"elapsed":2286,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["def slice_into_frames(amplitudes, window_length, hop_length):\n","    return librosa.core.spectrum.util.frame(\n","        np.pad(amplitudes, int(window_length // 2), mode='reflect'),\n","        frame_length=window_length, hop_length=hop_length)\n","    # выход: [window_length, num_windows]"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"oLjyuQmWMSy0","executionInfo":{"status":"ok","timestamp":1608472371431,"user_tz":-180,"elapsed":1375,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["def get_STFT(amplitudes, window_length, hop_length):\n","    \"\"\" Compute short-time Fourier Transform \"\"\"\n","    # разбиваем амплитуды на пересекающиеся фреймы [window_length, num_frames]\n","    frames = slice_into_frames(amplitudes, window_length, hop_length)\n","    \n","    # получаем веса для Фурье, float[window_length]\n","    fft_weights = librosa.core.spectrum.get_window('hann', window_length, fftbins=True)\n","    \n","    # применяем преобразование Фурье\n","    stft = np.fft.rfft(frames * fft_weights[:, None], axis=0)\n","    return stft"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"QenkAWMqMUrc","executionInfo":{"status":"ok","timestamp":1608472371432,"user_tz":-180,"elapsed":864,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["def get_melspectrogram(amplitudes, sample_rate=22050, n_mels=128,\n","                       window_length=2048, hop_length=512, fmin=1, fmax=8192):\n","    \"\"\"\n","    Implement mel-spectrogram as described above.\n","    :param amplitudes: float [num_amplitudes]\n","    :param sample rate: число отсчетов каждую секунду\n","    :param n_mels: число каналов спектрограммы\n","    :param window_length: параметр размера окна для Фурье\n","    :param hop_length: размер пересечения \n","    :param f_min: мин частота\n","    :param f_max: макс частота\n","    :returns: мел-scaled спектрограмма [n_mels, duration]\n","    \"\"\"\n","    # Шаг 1\n","    stft = get_STFT(amplitudes, window_length, hop_length)\n","    assert stft.shape == (window_length // 2 + 1, len(amplitudes) // 512 + 1)\n","    \n","    # Шаг 2\n","    spectrogram = np.abs(stft ** 2)\n","    \n","    # Шаг 3\n","    mel_basis = librosa.filters.mel(sample_rate, n_fft=window_length,\n","                                    n_mels=n_mels, fmin=fmin, fmax=fmax)\n","    # ^-- matrix [n_mels, window_length / 2 + 1]\n","    \n","    mel_spectrogram = np.dot(mel_basis, spectrogram)\n","    assert mel_spectrogram.shape == (n_mels, len(amplitudes) // 512 + 1)\n","    \n","    return mel_spectrogram"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"epcLUFIlMZ3o","executionInfo":{"status":"ok","timestamp":1608472371941,"user_tz":-180,"elapsed":1316,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["amplitudes1, _  = librosa.load('sample_m.mp3')\n","amplitudes2, _  = librosa.load('sample_f.mp3')"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"O_kla_yWMf-p","executionInfo":{"status":"ok","timestamp":1608472372611,"user_tz":-180,"elapsed":1953,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"dd760db1-396b-4a65-c6a1-f2682b088126"},"source":["plt.figure(figsize=[16, 4])\n","plt.subplot(1, 2, 1)\n","plt.title(\"Man\"); plt.xlabel(\"Time\"); plt.ylabel(\"Frequency\")\n","plt.imshow(get_melspectrogram(amplitudes1).transpose())\n","\n","plt.subplot(1, 2, 2)\n","plt.title(\"Woman\"); plt.xlabel(\"Time\"); plt.ylabel(\"Frequency\")\n","plt.imshow(get_melspectrogram(amplitudes2).transpose());"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1152x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ntjRUqeNM4KY","executionInfo":{"status":"ok","timestamp":1608472372613,"user_tz":-180,"elapsed":1928,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["ref1 = librosa.feature.melspectrogram(amplitudes2, sr=sample_rate, n_mels=128, fmin=1, fmax=8192)\n","assert np.allclose(get_melspectrogram(amplitudes2), ref1, rtol=1e-4, atol=1e-4)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeKyDpRhM8Se","executionInfo":{"status":"ok","timestamp":1608472372614,"user_tz":-180,"elapsed":1909,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"5d74a092-0ada-4886-c62e-33bc1eb92838"},"source":["import torchaudio\n","amplitudes, sr = torchaudio.load('sample_f.mp3')\n","ref2 = torchaudio.transforms.MelSpectrogram(sample_rate=sample_rate, f_min=1, n_mels=128, f_max=8192)(amplitudes)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/torchaudio/backend/utils.py:54: UserWarning: \"sox\" backend is being deprecated. The default backend will be changed to \"sox_io\" backend in 0.8.0 and \"sox\" backend will be removed in 0.9.0. Please migrate to \"sox_io\" backend. Please refer to https://github.com/pytorch/audio/issues/903 for the detail.\n","  '\"sox\" backend is being deprecated. '\n","/usr/local/lib/python3.6/dist-packages/torchaudio/functional.py:318: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (128) may be set too high. Or, the value for `n_freqs` (201) may be set too low.\n","  \"At least one mel filterbank has all zero values. \"\n","/usr/local/lib/python3.6/dist-packages/torch/functional.py:516: UserWarning: stft will require the return_complex parameter be explicitly  specified in a future PyTorch release. Use return_complex=False  to preserve the current behavior or return_complex=True to return  a complex output. (Triggered internally at  /pytorch/aten/src/ATen/native/SpectralOps.cpp:653.)\n","  normalized, onesided, return_complex)\n","/usr/local/lib/python3.6/dist-packages/torch/functional.py:516: UserWarning: The function torch.rfft is deprecated and will be removed in a future PyTorch release. Use the new torch.fft module functions, instead, by importing torch.fft and calling torch.fft.fft or torch.fft.rfft. (Triggered internally at  /pytorch/aten/src/ATen/native/SpectralOps.cpp:590.)\n","  normalized, onesided, return_complex)\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"DC3vEcUQO1vM"},"source":["### **Часть 2**\n","Обучим классификатор пола по голосу"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":231},"id":"8F_IJ3S9PP1S","executionInfo":{"status":"ok","timestamp":1608472375429,"user_tz":-180,"elapsed":4642,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"ceb8d36a-345b-49cd-ee09-8b7811cffde7"},"source":["%matplotlib inline\n","import timit_utils as tu\n","import timit_utils.audio_utils as au\n","import timit_utils.drawing_utils as du\n","\n","DATA_PATH = 'data/lisa/data/timit/raw/TIMIT'\n","corpus = tu.Corpus(DATA_PATH)\n","sentence = corpus.train.sentences_by_phone_df('aa').sentence[0]\n","du.DrawVerticalPanels([du.AudioPanel(sentence.raw_audio, show_x_axis=True),\n","                       du.WordsPanel(sentence.words_df, sentence.raw_audio.shape[0], show_x_axis=True),\n","                       du.PhonesPanel(sentence.phones_df, sentence.raw_audio.shape[0])\n","                      ])"],"execution_count":19,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1600x240 with 3 Axes>"]},"metadata":{"tags":[],"needs_background":"dark"}}]},{"cell_type":"code","metadata":{"id":"PDfx8QTQyruV","executionInfo":{"status":"ok","timestamp":1608472375430,"user_tz":-180,"elapsed":4618,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["class timit_dataloader:\n","    def __init__(self, data_path=_TIMIT_PATH, train_mode=True, age_mode=False):\n","        self.doc_file_path = os.path.join(data_path, 'DOC', 'SPKRINFO.TXT')\n","        self.corpus = tu.Corpus(data_path)\n","        with open(self.doc_file_path) as f:\n","            self.id_sex_dict = dict([(tmp.split(' ')[0], tmp.split(' ')[2]) for tmp in f.readlines()[39:]])\n","        if train_mode:\n","            self.trainset = self.create_dataset('train')\n","            self.validset = self.create_dataset('valid')\n","        self.testset = self.create_dataset('test')\n","\n","    def return_sex(self, id):\n","        return self.id_sex_dict[id]\n","\n","    def return_data(self):\n","        return self.trainset, self.validset, self.testset\n","\n","    def create_dataset(self, mode):\n","        global people\n","        assert mode in ['train', 'valid', 'test']\n","        if mode == 'train':\n","            people = [self.corpus.train.person_by_index(i) for i in range(350)]\n","        if mode == 'valid':\n","            people = [self.corpus.train.person_by_index(i) for i in range(350, 400)]\n","        if mode == 'test':\n","            people = [self.corpus.test.person_by_index(i) for i in range(150)]\n","        spectrograms_and_targets = []\n","\n","        for person in tqdm(people):\n","            target = self.return_sex(person.name)\n","            for i in range(len(person.sentences)):\n","                spectrograms_and_targets.append(\n","                    self.preprocess_sample(person.sentence_by_index(i).raw_audio, \n","                                           target))\n","\n","        X, y = map(np.stack, zip(*spectrograms_and_targets))\n","        X = X.transpose([0, 2, 1])  # to [batch, time, channels]\n","        return X, y\n","\n","    @staticmethod\n","    def spec_to_image(spec, eps=1e-6):\n","        mean = spec.mean()\n","        std = spec.std()\n","        spec_norm = (spec - mean) / (std + eps)\n","        spec_min, spec_max = spec_norm.min(), spec_norm.max()\n","        spec_scaled = 255 * (spec_norm - spec_min) / (spec_max - spec_min)\n","        spec_scaled = spec_scaled.astype(np.uint8)\n","        return spec_scaled\n","\n","    def preprocess_sample(self, amplitudes, target=None, age_mode=False, \n","                          sr=16000, max_length=150):\n","      # spectrogram = torchaudio.transforms.MelSpectrogram(sample_rate=sr, f_min=1, n_mels=128, f_max=8192)(amplitudes)[:,:max_length]\n","        spectrogram = librosa.feature.melspectrogram(amplitudes, sr=sr, n_mels=128, fmin=1, fmax=8192)[:, :max_length]\n","        spectrogram = np.pad(spectrogram, [[0, 0], [0, max(0, max_length - spectrogram.shape[1])]], mode='constant')\n","        if target == None:\n","          return np.array([self.spec_to_image(np.float32(spectrogram))]).transpose([0, 2, 1])\n","        target = 0 if target == 'F' else 1\n","        return self.spec_to_image(np.float32(spectrogram)), target"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"7k79riI-z7_S","executionInfo":{"status":"ok","timestamp":1608472375430,"user_tz":-180,"elapsed":3524,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["class dataloader:\n","    def __init__(self, spectrograms, targets):\n","        self.data = list(zip(spectrograms, targets))\n","\n","    def next_batch(self, batch_size, device):\n","        indices = np.random.randint(len(self.data), size=batch_size)\n","\n","        input = [self.data[i] for i in indices]\n","\n","        source = [line[0] for line in input]\n","        target = [line[1] for line in input]\n","\n","        return self.torch_batch(source, target, device)\n","\n","    @staticmethod\n","    def torch_batch(source, target, device):\n","        return tuple(\n","            [\n","                t.tensor(val, dtype=t.float).to(device, non_blocking=True)\n","                for val in [source, target]\n","            ]\n","        )"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"2MpKj0pi0WmB","executionInfo":{"status":"ok","timestamp":1608472375431,"user_tz":-180,"elapsed":3274,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["class Model(nn.Module):\n","    def __init__(self, window_sizes=(3, 4, 5)):\n","        super(Model, self).__init__()\n","\n","        self.convs = nn.ModuleList([\n","            nn.Conv2d(1, 128, [window_size, 128], padding=(window_size - 1, 0))\n","            for window_size in window_sizes\n","        ])\n","\n","        self.fc = nn.Linear(128 * len(window_sizes), 1)\n","\n","    def forward(self, x):\n","        # Apply a convolution + max pool layer for each window size\n","        x = torch.unsqueeze(x, 1)  # [B, C, T, E] Add a channel dim.\n","        xs = []\n","        for conv in self.convs:\n","            x2 = F.relu(conv(x))  # [B, F, T, 1]\n","            x2 = torch.squeeze(x2, -1)  # [B, F, T]\n","            x2 = F.max_pool1d(x2, x2.size(2))  # [B, F, 1]\n","            xs.append(x2)\n","        x = torch.cat(xs, 2)  # [B, F, window]\n","\n","        # FC\n","        x = x.view(x.size(0), -1)  # [B, F * window]\n","        logits = self.fc(x)  # [B, class]\n","        probs = torch.sigmoid(logits).view(-1)\n","        return probs\n","\n","    def loss(self, probs, targets):\n","        return nn.BCELoss()(probs.float(), targets.float())"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TLPo8yn00mhS","executionInfo":{"status":"ok","timestamp":1608472375638,"user_tz":-180,"elapsed":2959,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"9765410b-433b-4967-d918-c1a198bdc19a"},"source":["device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","print(f'using {device} mode')\n","patience = 500\n","best_loss = 1000\n","cnt = 0"],"execution_count":23,"outputs":[{"output_type":"stream","text":["using cpu mode\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeKUM4cb03kc","executionInfo":{"status":"ok","timestamp":1608472375641,"user_tz":-180,"elapsed":2926,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"dcfb1481-d8ec-4e31-b08f-7ed2c125fb65"},"source":["model = Model()\n","if device == torch.device('cuda'):\n","    model.cuda()\n","else:\n","    model.cpu()\n","model.train()"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Model(\n","  (convs): ModuleList(\n","    (0): Conv2d(1, 128, kernel_size=[3, 128], stride=(1, 1), padding=(2, 0))\n","    (1): Conv2d(1, 128, kernel_size=[4, 128], stride=(1, 1), padding=(3, 0))\n","    (2): Conv2d(1, 128, kernel_size=[5, 128], stride=(1, 1), padding=(4, 0))\n","  )\n","  (fc): Linear(in_features=384, out_features=1, bias=True)\n",")"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qMHHiDHm1IPU","executionInfo":{"status":"ok","timestamp":1608472460394,"user_tz":-180,"elapsed":87643,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"936ef702-852a-4319-a608-ee78ab522ffe"},"source":["_timit_dataloader = timit_dataloader()\n","train, valid, test = _timit_dataloader.return_data()\n","\n","trainset = dataloader(*train)\n","validset = dataloader(*valid)\n","testset = dataloader(*test)\n","BATCH_SIZE = 64\n","\n","optimizer = Adam(\n","    [p for p in model.parameters() if p.requires_grad], betas=(0.9, 0.999), eps=1e-5\n",")"],"execution_count":25,"outputs":[{"output_type":"stream","text":["100%|██████████| 350/350 [00:53<00:00,  6.50it/s]\n","100%|██████████| 50/50 [00:07<00:00,  6.56it/s]\n","100%|██████████| 150/150 [00:23<00:00,  6.47it/s]\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQalASGTajQm","executionInfo":{"status":"ok","timestamp":1608472460395,"user_tz":-180,"elapsed":87624,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"4bba0e1e-53bf-4e51-c443-b3538f6a9a1e"},"source":["print(device)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["cpu\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":438},"id":"OvlyIOzT1R3R","executionInfo":{"status":"error","timestamp":1608472469884,"user_tz":-180,"elapsed":97088,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}},"outputId":"8b7f522c-45e2-4e72-f9bd-1d096e787399"},"source":["import torch as t\n","for i in tqdm(range(100)):\n","\n","    optimizer.zero_grad()\n","\n","    input, target = trainset.next_batch(BATCH_SIZE, device=device)\n","    out = model(input)\n","    loss = model.loss(out, target)\n","    loss.backward()\n","    optimizer.step()\n","\n","    if i % 50 == 0:\n","        model.eval()\n","\n","        with torch.no_grad():\n","            optimizer.zero_grad()\n","\n","            input, target = validset.next_batch(BATCH_SIZE, device=device)\n","            out = model(input)\n","            valid_loss = model.loss(out, target)\n","            out, target = out.cpu().detach().numpy(), target.cpu().detach().numpy()\n","            # print(out, target)\n","            out = [1. if tmp > 0.5 else 0 for tmp in out]\n","            print(f'accuracy_score:{accuracy_score(out, target)}')\n","            print(\"i {}, valid {}\".format(i, valid_loss.item()))\n","            print(\"_________\")\n","\n","        model.train()\n","\n","    if i % 50 == 0 and best_loss > valid_loss.item():\n","        best_loss = valid_loss.item()\n","        cnt = 0\n","    else:\n","        cnt += 1\n","\n","    if cnt > patience:\n","        break\n","print('training finished')\n"],"execution_count":27,"outputs":[{"output_type":"stream","text":["  1%|          | 1/100 [00:00<01:34,  1.05it/s]"],"name":"stderr"},{"output_type":"stream","text":["accuracy_score:0.625\n","i 0, valid 5.628051280975342\n","_________\n"],"name":"stdout"},{"output_type":"stream","text":[" 15%|█▌        | 15/100 [00:09<00:52,  1.61it/s]\n"],"name":"stderr"},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-fb2995553b29>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloss\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m     \u001b[0mloss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m     \u001b[0moptimizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/torch/tensor.py\u001b[0m in \u001b[0;36mbackward\u001b[0;34m(self, gradient, retain_graph, create_graph)\u001b[0m\n\u001b[1;32m    219\u001b[0m                 \u001b[0mretain_graph\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mretain_graph\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    220\u001b[0m                 create_graph=create_graph)\n\u001b[0;32m--> 221\u001b[0;31m         \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mautograd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgradient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretain_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcreate_graph\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    222\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    223\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mregister_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhook\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/torch/autograd/__init__.py\u001b[0m in \u001b[0;36mbackward\u001b[0;34m(tensors, grad_tensors, retain_graph, create_graph, grad_variables)\u001b[0m\n\u001b[1;32m    130\u001b[0m     Variable._execution_engine.run_backward(\n\u001b[1;32m    131\u001b[0m         \u001b[0mtensors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgrad_tensors_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretain_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcreate_graph\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 132\u001b[0;31m         allow_unreachable=True)  # allow_unreachable flag\n\u001b[0m\u001b[1;32m    133\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    134\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"navxoiHh14kK","executionInfo":{"status":"aborted","timestamp":1608472469876,"user_tz":-180,"elapsed":97055,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["model.eval()\n","\n","def predict(wavfile):\n","    waveform, _ = librosa.load(wavfile, sr=16000)\n","\n","    input = _timit_dataloader.preprocess_sample(waveform)\n","    with torch.no_grad():\n","        out = model(torch.tensor(input, dtype=torch.float).to(device))\n","        out = out.cpu().detach().numpy()\n","    print(out)\n","    out = 'female' if out < 0.5 else 'male'\n","    return out"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pyHQnmmH6web","executionInfo":{"status":"aborted","timestamp":1608472469877,"user_tz":-180,"elapsed":96975,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["predict('tmp.wav')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BpYzNpwY27SU","executionInfo":{"status":"aborted","timestamp":1608472469878,"user_tz":-180,"elapsed":96942,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["# Code for recording audio from the browser\n","from IPython.display import Javascript\n","from google.colab import output\n","from base64 import b64decode\n","import IPython\n","import uuid\n","from google.colab import output\n","\n","\n","class InvokeButton(object):\n","  def __init__(self, title, callback):\n","    self._title = title\n","    self._callback = callback\n","\n","  def _repr_html_(self):\n","    from google.colab import output\n","    callback_id = 'button-' + str(uuid.uuid4())\n","    output.register_callback(callback_id, self._callback)\n","\n","    template = \"\"\"<button id=\"{callback_id}\" style=\"cursor:pointer;background-color:#EEEEEE;border-color:#E0E0E0;padding:5px 15px;font-size:14px\">{title}</button>\n","        <script>\n","          document.querySelector(\"#{callback_id}\").onclick = (e) => {{\n","            google.colab.kernel.invokeFunction('{callback_id}', [], {{}})\n","            e.preventDefault();\n","          }};\n","        </script>\"\"\"\n","    html = template.format(title=self._title, callback_id=callback_id)\n","    return html\n","\n","RECORD = \"\"\"\n","const sleep  = time => new Promise(resolve => setTimeout(resolve, time))\n","const b2text = blob => new Promise(resolve => {\n","  const reader = new FileReader()\n","  reader.onloadend = e => resolve(e.srcElement.result)\n","  reader.readAsDataURL(blob)\n","})\n","var record = time => new Promise(async resolve => {\n","  stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n","  recorder = new MediaRecorder(stream)\n","  chunks = []\n","  recorder.ondataavailable = e => chunks.push(e.data)\n","  recorder.start()\n","  await sleep(time)\n","  recorder.onstop = async ()=>{\n","    blob = new Blob(chunks)\n","    text = await b2text(blob)\n","    resolve(text)\n","  }\n","  recorder.stop()\n","})\n","\"\"\"\n","\n","def record(sec=3):\n","  display(Javascript(RECORD))\n","  s = output.eval_js('record(%d)' % (sec*1000))\n","  b = b64decode(s.split(',')[1])\n","  with open('audio.wav','wb+') as f:\n","    f.write(b)\n","  return 'audio.wav'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qWKhogdI284r","executionInfo":{"status":"aborted","timestamp":1608472469880,"user_tz":-180,"elapsed":96909,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["def classify():\n","  print(\"Now recording for 3 seconds, say what you will...\")\n","  record()\n","  os.system('ffmpeg -i audio.wav -ar 16000 -y audio.wav')\n","  print(f\"Audio recording complete, guess it is {predict('audio.wav')}\")\n","\n","InvokeButton('Start recording', classify)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dNvgwWlx3S8U","executionInfo":{"status":"aborted","timestamp":1608472469880,"user_tz":-180,"elapsed":96872,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["IPython.display.Audio('audio.wav')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lHqX6BbjPhOt"},"source":["Аугментации?"]},{"cell_type":"code","metadata":{"id":"j5bOBI3f4FTF","executionInfo":{"status":"aborted","timestamp":1608472469881,"user_tz":-180,"elapsed":96813,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["def spoil_with_noise(data, noise_factor=0.02):\n","    noise = np.random.normal(size=len(data))\n","    augmented_data = data + noise_factor * noise\n","    # Cast back to same data type\n","    augmented_data = augmented_data.astype(type(data[0]))\n","    return augmented_data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GTTEdaz7Pjii","executionInfo":{"status":"aborted","timestamp":1608472469882,"user_tz":-180,"elapsed":96789,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":["def speed_change(data, speed_factor=0.5):\n","  return librosa.effects.time_stretch(data, speed_factor)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"q9rDr584PvIw"},"source":["@Nestyme"]},{"cell_type":"code","metadata":{"id":"g_kmCIH5bKdo","executionInfo":{"status":"aborted","timestamp":1608472469883,"user_tz":-180,"elapsed":96738,"user":{"displayName":"Илья Волынец","photoUrl":"","userId":"08811045169562879935"}}},"source":[""],"execution_count":null,"outputs":[]}]}